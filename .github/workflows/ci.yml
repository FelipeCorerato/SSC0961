name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Testes e Análise
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        
    - name: Criar arquivo .env
      run: |
        echo "GEMINI_API_KEY=test_key" > .env
        echo "FIREBASE_API_KEY=test_key" >> .env
      
    - name: Obter dependências
      run: flutter pub get
      
    - name: Verificar formatação
      run: dart format --set-exit-if-changed .
      
    - name: Analisar código
      run: flutter analyze --no-fatal-infos --no-fatal-warnings || true
      
    - name: Executar testes
      run: flutter test
      
    - name: Gerar cobertura
      run: flutter test --coverage

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        
    - name: Criar arquivo .env
      run: |
        echo "GEMINI_API_KEY=test_key" > .env
        echo "FIREBASE_API_KEY=test_key" >> .env
        
    - name: Obter dependências
      run: flutter pub get
      
    - name: Build Web
      run: flutter build web --release
      
    - name: Upload Web build
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build/web/

  build-android:
    name: Build Android (Opcional)
    runs-on: ubuntu-latest
    needs: test
    continue-on-error: true
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        
    - name: Criar arquivo .env
      run: |
        echo "GEMINI_API_KEY=test_key" > .env
        echo "FIREBASE_API_KEY=test_key" >> .env
        
    - name: Obter dependências
      run: flutter pub get
      
    - name: Build APK
      run: flutter build apk --release
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk

  build-ios:
    name: Build iOS (sem assinatura)
    runs-on: macos-latest
    needs: test
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Criar arquivo .env
        run: |
          echo "GEMINI_API_KEY=test_key" > .env
          echo "FIREBASE_API_KEY=test_key" >> .env
      - name: Obter dependências
        run: flutter pub get
      - name: Build iOS (sem assinatura)
        run: flutter build ios --release --no-codesign
      - name: Upload iOS build
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/iphoneos/ 